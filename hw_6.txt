1.
aws ec2 create-security-group --group-name 281024-nataliia-sg --description "Security Group for MySQL and HTTPS and SSH"
"GroupId": "sg-0de9a6086ef585db6"

2.
aws ec2 authorize-security-group-ingress --group-id sg-0de9a6086ef585db6 --protocol tcp --port 3306 --cidr 0.0.0.0/0 --tag-specifications 'ResourceType=security-group-rule,Tags=[{Key=Name,Value=mysql}]'
aws ec2 authorize-security-group-ingress --group-id sg-0de9a6086ef585db6 --protocol tcp --port 443 --cidr 0.0.0.0/0 --tag-specifications 'ResourceType=security-group-rule,Tags=[{Key=Name,Value=https}]'

4.
aws ec2 describe-security-groups --group-ids sg-0de9a6086ef585db6 --query 'SecurityGroups[*].IpPermissions' --output json

[
    [
        {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "UserIdGroupPairs": [],
            "IpRanges": [
                {
                    "Description": "SSH My IP",
                    "CidrIp": "185.110.138.122/32"
                }
            ],
            "Ipv6Ranges": [],
            "PrefixListIds": []
        },
        {
            "IpProtocol": "tcp",
            "FromPort": 3306,
            "ToPort": 3306,
            "UserIdGroupPairs": [],
            "IpRanges": [
                {
                    "CidrIp": "0.0.0.0/0"
                }
            ],
            "Ipv6Ranges": [],
            "PrefixListIds": []
        },
        {
            "IpProtocol": "tcp",
            "FromPort": 443,
            "ToPort": 443,
            "UserIdGroupPairs": [],
            "IpRanges": [
                {
                    "CidrIp": "0.0.0.0/0"
                }
            ],
            "Ipv6Ranges": [],
            "PrefixListIds": []
        }
    ]
]
